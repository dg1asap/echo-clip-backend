syntax = "proto3";

option csharp_namespace = "EchoClip.gRPC";

package user;

service UserController {
	rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
	
	rpc GetFriends (GetFriendsRequest) returns (GetFriendsResponse);
	rpc GetInvitedFriends (GetInvitedFriendsRequest) returns (GetInvitedFriendsResponse);
	rpc GetInvitationsForMe (GetInvitationsForMeRequest) returns (GetInvitationsForMeResponse);
	rpc GetRejectedFriends (GetRejectedFriendsRequest) returns (GetRejectedFriendsResponse);
	
	rpc SendFriendInvitation (SendFriendInvitationRequest) returns (SendFriendInvitationResponse);
	
	rpc AcceptFriend (AcceptFriendRequest) returns (AcceptFriendResponse);
	rpc RejectFriend (RejectFriendRequest) returns (RejectFriendResponse);
}

message CreateUserRequest {
	string Username = 1;
	string Password = 2;
	string Email = 3;
	string Name = 4;
	string Surname = 5;
}

message CreateUserResponse {
	string Username = 1;
	string Email = 2;
}

message RelatedUserMessage {
	string id = 1;
	string Username = 2;
	string Name = 3;
	string Surname = 4;
}

message GetFriendsRequest {}

message GetFriendsResponse {
	repeated RelatedUserMessage Friends = 1;
}

message GetInvitedFriendsRequest {}

message GetInvitedFriendsResponse {
	repeated RelatedUserMessage FiendsWhoIInvited = 1;
}

message GetInvitationsForMeRequest {}

message GetInvitationsForMeResponse {
	repeated RelatedUserMessage FiendsWhoInvitedMe = 1;
}

message GetRejectedFriendsRequest {}

message GetRejectedFriendsResponse {
	repeated RelatedUserMessage RejectedFriends = 1;
}

message SendFriendInvitationRequest {
	string userFriendId = 1;
}

message SendFriendInvitationResponse {}

message AcceptFriendRequest {
	string userFriendId = 1;
}

message AcceptFriendResponse {}

message RejectFriendRequest {
	string userFriendId = 1;
}

message RejectFriendResponse {}