// <auto-generated />
using System;
using EchoClip.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EchoClip.Models.Migrations
{
    [DbContext(typeof(DatabaseEchoClipContext))]
    [Migration("20231214202500_foreignKeyChsdaf")]
    partial class foreignKeyChsdaf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("EchoClip.Models.Chats", b =>
                {
                    b.Property<Guid>("Chat_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Owner_user_id")
                        .HasColumnType("uuid");

                    b.HasKey("Chat_id");

                    b.HasIndex("Owner_user_id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("EchoClip.Models.ChatsVoiceRecordings", b =>
                {
                    b.Property<Guid>("Chat_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Voice_recording_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Voice_recordingsVoide_recoding_id")
                        .HasColumnType("uuid");

                    b.HasKey("Chat_id", "Voice_recording_id");

                    b.HasIndex("Voice_recordingsVoide_recoding_id");

                    b.ToTable("Chats_voice_recordings");
                });

            modelBuilder.Entity("EchoClip.Models.FriendInvates", b =>
                {
                    b.Property<Guid>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("User_friend_invates_id")
                        .HasColumnType("uuid");

                    b.HasKey("User_id");

                    b.ToTable("Friend_invates");
                });

            modelBuilder.Entity("EchoClip.Models.Friends", b =>
                {
                    b.Property<Guid>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("User_friend_id")
                        .HasColumnType("uuid");

                    b.HasKey("User_id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("EchoClip.Models.Users", b =>
                {
                    b.Property<Guid>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("User_id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EchoClip.Models.UsersWhoJoinedChats", b =>
                {
                    b.Property<Guid>("User_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Chat_id")
                        .HasColumnType("uuid");

                    b.HasKey("User_id", "Chat_id");

                    b.HasIndex("Chat_id");

                    b.ToTable("Users_who_joined_chats");
                });

            modelBuilder.Entity("EchoClip.Models.VoiceRecordings", b =>
                {
                    b.Property<Guid>("Voide_recoding_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Owner_user_id")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Recording")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("Upload_data_time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Voide_recoding_id");

                    b.ToTable("Voice_recordings");
                });

            modelBuilder.Entity("EchoClip.Models.Chats", b =>
                {
                    b.HasOne("EchoClip.Models.Users", "Owner_user")
                        .WithMany("Created_chats")
                        .HasForeignKey("Owner_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner_user");
                });

            modelBuilder.Entity("EchoClip.Models.ChatsVoiceRecordings", b =>
                {
                    b.HasOne("EchoClip.Models.Chats", null)
                        .WithMany()
                        .HasForeignKey("Chat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EchoClip.Models.VoiceRecordings", null)
                        .WithMany()
                        .HasForeignKey("Voice_recordingsVoide_recoding_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EchoClip.Models.UsersWhoJoinedChats", b =>
                {
                    b.HasOne("EchoClip.Models.Chats", null)
                        .WithMany()
                        .HasForeignKey("Chat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EchoClip.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EchoClip.Models.Users", b =>
                {
                    b.Navigation("Created_chats");
                });
#pragma warning restore 612, 618
        }
    }
}
